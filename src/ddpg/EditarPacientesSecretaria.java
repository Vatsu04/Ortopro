
package ddpg;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class EditarPacientesSecretaria extends javax.swing.JFrame {
 public static String cliente = "NULL";

 
 /*
 public static String cliente_selecionado = PesquisarHistoricoCliente.cliente;
 */
   
   /*
      if (Login.role.equals("SECRETARIA")) {
    // Show admin menu
            new MenuSecretaria().setVisible(true);
            
            this.dispose();
} else if (Login.role.equals("ORTOPEDISTA")) {
    new MenuOrtopedista().setVisible(true);
            
            this.dispose();
} else {
    // Handle invalid role or show a default menu
    JOptionPane.showMessageDialog(this, "Função inválida, fechando o software.");
    
    this.dispose();
}
    */
 
    public EditarPacientesSecretaria() {
         Login.role = "SECRETARIA";
        initComponents();
        listarValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        IdPaciente = new javax.swing.JTextField();
        Alergias = new javax.swing.JTextField();
        Telefone = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        Data = new javax.swing.JTextField();
        Cidade = new javax.swing.JTextField();
        Sair = new javax.swing.JButton();
        HM = new javax.swing.JTextField();
        HC = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        Nome = new javax.swing.JTextField();
        CPF = new javax.swing.JTextField();
        ID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaPaciente = new javax.swing.JTable();
        CriarFicha = new javax.swing.JButton();
        Carregar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        Limpar = new javax.swing.JButton();
        ConfiguracoesPaciente = new javax.swing.JButton();
        Gerenciamento = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        IdPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(IdPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, 140, 30));
        getContentPane().add(Alergias, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, 110, -1));
        getContentPane().add(Telefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 280, 110, -1));
        getContentPane().add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 230, 110, -1));
        getContentPane().add(Data, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, 110, -1));
        getContentPane().add(Cidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 180, 110, -1));

        Sair.setContentAreaFilled(false);
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });
        getContentPane().add(Sair, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 620, 260, 50));
        getContentPane().add(HM, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 180, 110, -1));
        getContentPane().add(HC, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 230, 110, -1));

        Search.setContentAreaFilled(false);
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 80, 40, 30));

        Nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeActionPerformed(evt);
            }
        });
        getContentPane().add(Nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, 110, -1));
        getContentPane().add(CPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 180, 110, -1));

        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });
        getContentPane().add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 110, -1));

        TabelaPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "Telefone", "Cidade", "DDN", "Email", "HM", "HC", "Alergias"
            }
        ));
        jScrollPane1.setViewportView(TabelaPaciente);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 740, 310));

        CriarFicha.setContentAreaFilled(false);
        CriarFicha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CriarFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CriarFichaActionPerformed(evt);
            }
        });
        getContentPane().add(CriarFicha, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 60, 130, 50));

        Carregar.setContentAreaFilled(false);
        Carregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarregarActionPerformed(evt);
            }
        });
        getContentPane().add(Carregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 630, 90, 30));

        Excluir.setContentAreaFilled(false);
        Excluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(Excluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 630, 100, 30));

        Editar.setContentAreaFilled(false);
        Editar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        getContentPane().add(Editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 630, 100, 30));

        Limpar.setContentAreaFilled(false);
        Limpar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });
        getContentPane().add(Limpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 630, 100, 30));

        ConfiguracoesPaciente.setContentAreaFilled(false);
        ConfiguracoesPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConfiguracoesPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfiguracoesPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(ConfiguracoesPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 170, 50));

        Gerenciamento.setContentAreaFilled(false);
        Gerenciamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Gerenciamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GerenciamentoActionPerformed(evt);
            }
        });
        getContentPane().add(Gerenciamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 170, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Prototipos/5.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDActionPerformed

    private void NomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeActionPerformed

    private void IdPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdPacienteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        cliente = IdPaciente.getText();
        new HistoricoPaciente().setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_SearchActionPerformed

    private void CarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarregarActionPerformed
        // TODO add your handling code here:
        CarregarCampos();
    }//GEN-LAST:event_CarregarActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        // TODO add your handling code here:
        ExcluirPaciente();
        listarValores();
        LimparCampos();
    }//GEN-LAST:event_ExcluirActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        // TODO add your handling code here:
        AlterarPacientes();
        listarValores();
        LimparCampos();
    }//GEN-LAST:event_EditarActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
        // TODO add your handling code here:
        LimparCampos();
    }//GEN-LAST:event_LimparActionPerformed

    private void GerenciamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GerenciamentoActionPerformed
        // TODO add your handling code here:
        new EditarConsultas().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_GerenciamentoActionPerformed

    private void ConfiguracoesPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfiguracoesPacienteActionPerformed
        // TODO add your handling code here:
        new EditarPacientesSecretaria().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ConfiguracoesPacienteActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_SairActionPerformed

    private void CriarFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CriarFichaActionPerformed
        new CadastroPaciente().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CriarFichaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarPacientesSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarPacientesSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarPacientesSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarPacientesSecretaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarPacientesSecretaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Alergias;
    private javax.swing.JTextField CPF;
    private javax.swing.JButton Carregar;
    private javax.swing.JTextField Cidade;
    private javax.swing.JButton ConfiguracoesPaciente;
    private javax.swing.JButton CriarFicha;
    private javax.swing.JTextField Data;
    private javax.swing.JButton Editar;
    private javax.swing.JTextField Email;
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Gerenciamento;
    private javax.swing.JTextField HC;
    private javax.swing.JTextField HM;
    private javax.swing.JTextField ID;
    private javax.swing.JTextField IdPaciente;
    private javax.swing.JButton Limpar;
    private javax.swing.JTextField Nome;
    private javax.swing.JButton Sair;
    private javax.swing.JButton Search;
    private javax.swing.JTable TabelaPaciente;
    private javax.swing.JTextField Telefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
private void listarValores() { //Declaração do método listarValores(). Esse método é provavelmente parte de uma classe e é responsável por preencher uma tabela ou lista com valores obtidos de algum lugar, como um banco de dados.
        try {
            PacienteDAO objPacienteDAO = new PacienteDAO();
            DefaultTableModel model = (DefaultTableModel) TabelaPaciente.getModel();
            model.setNumRows(0);

            ArrayList<Paciente> lista = objPacienteDAO.PesquisarPaciente();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId_Paciente(),
                     lista.get(num).getNome_Completo(),
                   lista.get(num).getCPF(),
                    lista.get(num).getTelefone(),
                    lista.get(num).getCidade(),
                     lista.get(num).getData_Nascimento(),     
              lista.get(num).getEmail(),
              lista.get(num).getHistorico_Medico(),
              lista.get(num).getHistorico_Cirurgico(),
              lista.get(num).getAlergias(),
                });

            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Listar Valores :" + erro);
        }
    }

  private void CarregarCampos() {
/*
        Esse método é responsável por carregar os campos de texto da interface com os valores selecionados na tabela. Ele faz o seguinte:

Obtém o índice da linha selecionada na tabela através do método getSelectedRow().
Através do modelo da tabela (TabelaPacientes.getModel()), obtém os valores correspondentes da linha selecionada.
Define os valores obtidos nos campos de texto Id, User, Telefone e Email.
 */        
        int setar = TabelaPaciente.getSelectedRow();

        ID.setText(TabelaPaciente.getModel().getValueAt(setar, 0).toString());
        Nome.setText(TabelaPaciente.getModel().getValueAt(setar, 1 ).toString());
        CPF.setText(TabelaPaciente.getModel().getValueAt(setar, 2).toString());
        Telefone.setText(TabelaPaciente.getModel().getValueAt(setar, 3).toString());
        Cidade.setText(TabelaPaciente.getModel().getValueAt(setar, 4).toString());
     Data.setText(TabelaPaciente.getModel().getValueAt(setar, 5).toString());
        Email.setText(TabelaPaciente.getModel().getValueAt(setar, 6).toString());
        HM.setText(TabelaPaciente.getModel().getValueAt(setar, 7).toString());
        HC.setText(TabelaPaciente.getModel().getValueAt(setar, 8).toString());
        Alergias.setText(TabelaPaciente.getModel().getValueAt(setar, 9).toString());    }

    private void LimparCampos() {
/*
        Esse método é responsável por limpar os campos de texto da interface. Ele simplesmente define o texto vazio para os campos Id, User, Telefone e Email.
 */        
        ID.setText("");
        
        CPF.setText("");
        
        Cidade.setText("");
        Telefone.setText("");
        Email.setText("");
        HM.setText("");
        HC.setText("");
        Alergias.setText("");
        Data.setText("");
        Nome.setText("");
    }

    private void AlterarPacientes() {
 /*
 Esse método é responsável por alterar as informações de um usuário. Ele faz o seguinte:

Obtém os valores dos campos Id, User, Telefone e Email.
Cria uma instância da classe Pacientes e define os valores obtidos nos respectivos atributos.
Cria uma instância da classe PacientesDAO.
Chama o método AlterarPacientes() da classe PacientesDAO, passando o objeto objPacientes como argumento para realizar a alteração no banco de dados.   
 */         
        int id_paciente;
        String nome;
        String cpf;
        String email;
        String telefone;
        String cidade;
        String data_nascimento;
        String historico_medico;
        String historico_cirurgico;
        String alergias;
        
        
        
        

        id_paciente = Integer.parseInt(ID.getText());
      
          cpf = CPF.getText();
       
      
        
        email = Email.getText();
        nome = Nome.getText();
        
        cidade = Cidade.getText();
        data_nascimento = Data.getText();
        alergias = Alergias.getText();
        historico_cirurgico = HC.getText();
        historico_medico = HM.getText();
        telefone = Telefone.getText();
        
        
        Paciente objPacientes = new Paciente();
        objPacientes.setId_Paciente(id_paciente);
       
         objPacientes.setCPF(cpf);
        objPacientes.setAlergias(alergias);
        objPacientes.setHistorico_Medico(historico_medico);
        objPacientes.setHistorico_Cirurgico(historico_cirurgico);
        objPacientes.setData_Nascimento(data_nascimento);
        objPacientes.setTelefone(telefone);
        objPacientes.setCidade(cidade);
        objPacientes.setEmail(email);
        objPacientes.setNome_Completo(nome);

        PacienteDAO objPacientesDAO = new PacienteDAO();
        objPacientesDAO.AlterarPaciente(objPacientes);

    }

    private void ExcluirPaciente() {
 /*
 Esse método é responsável por excluir um usuário. Ele faz o seguinte:

Obtém o valor do campo Id e converte para o tipo inteiro.
Cria uma instância da classe Paciente e define o valor do ID obtido no atributo id.
Cria uma instância da classe PacienteDAO.
Chama o método ExcluirPaciente() da classe PacienteDAO, passando o objeto objPaciente como argumento para realizar a exclusão no banco de dados.   
 */            
        int id = 0;

        id = Integer.parseInt(ID.getText());

        Paciente objPaciente = new Paciente();
        objPaciente.setId_Paciente(id);

        PacienteDAO objPacienteDAO = new PacienteDAO();
        objPacienteDAO.ExcluirPaciente(objPaciente);
    }



}
